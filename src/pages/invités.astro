---
import { listeinvites } from '../js/backend.mjs';
import Layout from '../layouts/Layout.astro';
import Card from '../components/card.astro';
import PocketBase from 'pocketbase';
import { Picture } from 'astro:assets';

const pb = new PocketBase('http://127.0.0.1:8090'); // Connexion PocketBase
const invites = await listeinvites(); // Renomme `invite` en `invites` pour montrer que c'est un tableau
const { field = "photo", alt, classPicture, classImg, thumb = "1024x1024" } = Astro.props;
---

<Layout title="Invités">
  <section class="p-6">
    <h1 class="text-3xl font-bold mb-6">Nos Invités</h1>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
      {invites.map(invite => {
        const imageUrl = invite?.id && invite?.photo 
          ? pb.files.getURL(invite, invite.photo, { thumb }) 
          : null;

        return (
          <Card 
            title={`${invite.prenom} ${invite.nom}`} 
            description={invite.bio} 
            imageUrl={imageUrl} 
            url={`/invites/${invite.id}`} 
          >
            {imageUrl ? (
              <Picture 
                pictureAttributes={{ class: classPicture }} 
                class={classImg}
                inferSize={true} 
                formats={['png', 'webp']} 
                alt={alt || `${invite.prenom} ${invite.nom}`} 
                src={imageUrl} 
              />
            ) : (
              <div class={`${classPicture} w-full h-64 flex items-center justify-center bg-gray-200`}>
                <span class="text-gray-500">Image non disponible</span>
              </div>
            )}
          </Card>
        );
      })}
    </div>
  </section>
</Layout>
