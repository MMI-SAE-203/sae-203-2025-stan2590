---
import { listeinvites } from '../js/backend.mjs';
import Layout from '../layouts/Layout.astro';
import Card from '../components/card.astro';
import PocketBase from 'pocketbase';
import { Picture } from 'astro:assets';

const pb = new PocketBase('http://127.0.0.1:8090'); // Connexion PocketBase
const invites = await listeinvites();
const { record = invites, field = "photo", alt, classPicture, classImg, thumb = "1024x1024" } = Astro.props;
---

<Layout title="Invités">
  <section class="p-6">
    <h1 class="text-3xl font-bold mb-6">Nos Invités</h1>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
      {invites.map(invite => {
        // Calculer l'URL de l'image pour chaque invité
        const imageUrl = invite?.[field] ? pb.files.getURL(invite, invite[field], { thumb }) : null;

        // Si l'image existe, on l'affiche avec le composant <Picture>
        const inviteImageUrl = imageUrl ? (
          <div class="flex justify-center">
            <Picture 
              pictureAttributes={{ class: classPicture }} 
              class={classImg}
              inferSize={true} 
              formats={['png', 'webp']} 
              alt={alt || `${invite.prenom} ${invite.nom}`} 
              src={imageUrl} 
            />
          </div>
        ) : (
          <div class={classPicture + " w-full h-64 flex items-center justify-center bg-gray-200"}>
            <span class="text-gray-500">Image non disponible</span>
          </div>
        );

        // Retourner le composant <Card> avec toutes les données
        return (
          <Card 
            title={`${invite.prenom} ${invite.nom}`} 
            description={invite.bio} 
            imageUrl={inviteImageUrl} 
            url={`/invites/${invite.id}`} 
          />
        );
      })}
    </div>
  </section>
</Layout>



